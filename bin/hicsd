#!/usr/bin/env python3

"""HiC sunt dracones - Your little helper for the HiC analysis"""

import argparse
import hicsuntdracones.submatrix

__author__ = "Konrad Foerstner <konrad@foerstner.org>"
__copyright__ = "2018 by Konrad Foerstner <konrad@foerstner.org>"
__license__ = "ISC license"
__email__ = "konrad@foerstner.org"
__version__ = "0.1.0"


def main():
    """
    The entry point.
    """
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(help="commands")

    show_version_parser = subparsers.add_parser(
        "version", help="Show version")
    show_version_parser.set_defaults(func=show_version)

    hicpro2homer_parser = subparsers.add_parser(
        "hicpro2homer", help="Convert a matrix in HiC-Pro format to "
        "Homer format")
    hicpro2homer_parser.set_defaults(func=hicpro2homer)
    hicpro2homer_parser.add_argument("--input_matrix", "-i", required=True)
    hicpro2homer_parser.add_argument("--output_matrix", "-o", required=True)

    shape_parser = subparsers.add_parser(
        "shape", help="Return the shape of the matrix")
    shape_parser.set_defaults(func=shape)

    submatrix_parser = subparsers.add_parser(
        "submatrix", help="Extract submatrices")
    submatrix_parser.set_defaults(func=submatrix)
    submatrix_parser.add_argument(
        "--matrix", "-m", dest="matrix_file", required=True)
    submatrix_parser.add_argument("--output_prefix", "-o", required=True)
    submatrix_parser.add_argument("--chromosome", "-c")
    submatrix_parser.add_argument("--delimiter", "-d", default="-")

    diff_matrix_parser = subparsers.add_parser(
        "diff_matrix", help="Generate differential matrix by dividing the "
        "values of one matrix by the values of the other.")
    diff_matrix_parser.set_defaults(func=diff_matrix)
    diff_matrix_parser.add_argument("--numerator_matrix", "-n")
    diff_matrix_parser.add_argument("--denominator_matrix", "-d")
    diff_matrix_parser.add_argument("--output_matrix", "-o")

    matrix_heatmap_parser = subparsers.add_parser(
        "matrix_heatmap", help="Plot interaction matix heatmap")
    matrix_heatmap_parser.set_defaults(func=matrix_heatmap)

    virtual_4C_parser = subparsers.add_parser(
        "virtual_4C", help="Perform virtual 4C analysis")
    virtual_4C_parser.set_defaults(func=virtual_4C)

    dist_dep_decay_parser = subparsers.add_parser(
        "dist_dep_decay", help="Distant dependent decay")
    dist_dep_decay_parser.set_defaults(func=dist_dep_decay)
    # output plot and/or text file

    colocalisation_parser = subparsers.add_parser(
         "colocalisation", help="Perform colocalisation analysis")
    colocalisation_parser.set_defaults(func=colocalisation)

    args = parser.parse_args()
    if "func" in dir(args):
        args.func(args)
    else:
        parser.print_help()

def show_version():
    """
    Version
    """
    print(__version__)

def shape():
    """
    Print the shape of the matrix
    """
    pass

def hicpro2homer(args):
    """
    Convert a matrix in HiC-Pro format to "Homer format.
    """
    pass

def submatrix(args):
    """
    Extract a submatrix
    """
    hicsuntdracones.submatrix.extract(
        args.matrix_file, args.output_prefix, args.chromosome, args.delimiter)

def matrix_heatmap(args):
    """
    Plot matrix heatmap
    """
    pass

def diff_matrix(args):
    """
    Generate differential matrix by dividing the values of one matrix
    by the values of the other.
    """

def virtual_4C(args):
    """
    Perform vitural 4C analysis
    """
    pass

def dist_dep_decay(args):
    pass

def colocalisation(args):
    pass

main()
